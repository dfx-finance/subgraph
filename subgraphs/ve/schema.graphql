##
## AMM data
##
type Token @entity(immutable: true) {
  # token address
  id: ID!

  # mirrored from smart contract
  decimals: BigInt!
  symbol: String!
  name: String!
}

type Pair @entity {
  # Contract address
  id: ID!
  decimals: BigInt!
  symbol: String!
  name: String!

  # mirrored from the smart contract
  token0: Token!
  token1: Token!

  # reserves
  reserve0: BigDecimal!
  reserve1: BigDecimal!
}

##
## veDFX Token
##
type veDFX @entity {
  # token address
  id: ID!
  decimals: Int!
  symbol: String!

  supply: BigDecimal!
  dfxBalance: BigDecimal!
  blockNum: BigInt!
}

##
##
##
type GaugeController @entity {
  # gauge controller address
  id: ID!

  totalWeight: BigDecimal!
  blockNum: BigInt!
}

##
## Gauge
##
type Gauge @entity {
  # Contract address
  id: ID!
  decimals: Int!
  symbol: String!

  # mirrored from the smart contract
  lpt: Bytes! # curve addr
  lptAmount: BigDecimal! # totalSupply
  workingSupply: BigDecimal!
  totalSupply: BigDecimal!
  dfxBalance: BigDecimal!
  rewardCount: BigInt!

  # calculated
  active: Boolean!

  blockNum: BigInt!
}

type GaugeReward @entity(immutable: true) {
  id: ID!
  token: Token!
  availableRewards: BigDecimal!
  blockTimestamp: BigInt!
}
